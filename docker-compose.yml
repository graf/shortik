version: '2.4'

services:
  app: &app
    build:
      context: .dockerdev
      dockerfile: Dockerfile
      args:
        RUBY_VERSION: '2.7.1'
        PG_MAJOR_VERSION: '13'
        BUNDLER_VERSION: '2.1.4'
    image: shortik:0.0.1
    command: '/bin/true'
    tmpfs:
      - /tmp

  backend: &backend
    <<: *app
    stdin_open: true
    tty: true
    volumes:
      - .:/app:cached
      - rails_cache:/app/tmp/cache
      - bundle:/usr/local/bundle
    environment:
      - RAILS_ENV=${RAILS_ENV:-development}
      - BOOTSNAP_CACHE_DIR=/usr/local/bundle/_bootsnap
      - WEB_CONCURRENCY=1
      - HISTFILE=/app/log/.bash_history
      - PSQL_HISTFILE=/app/log/.psql_history
      - RAILS_LOG_TO_STDOUT=1
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  rails:
    <<: *backend
    command: bundle exec rails server -b 0.0.0.0
    ports:
      - '3000:3000'

  postgres:
    image: postgres:13.0-alpine
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./log:/root/log:cached
    environment:
      - PSQL_HISTFILE=/root/log/.psql_history
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - '5432:5432'
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s

  redis:
    image: redis:6.0.8-alpine
    volumes:
      - redis:/data
    ports:
      - 6379
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30

volumes:
  postgres:
  redis:
  bundle:
  rails_cache:
